<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Servlet实战</title>
      <link href="/2021/10/01/Servlet%E5%AE%9E%E6%88%98/"/>
      <url>/2021/10/01/Servlet%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Servlet实战"><a href="#Servlet实战" class="headerlink" title="Servlet实战"></a>Servlet实战</h1><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="1，面对添加，无从下手，不知道如何进行页面的跳转"><a href="#1，面对添加，无从下手，不知道如何进行页面的跳转" class="headerlink" title="1，面对添加，无从下手，不知道如何进行页面的跳转"></a>1，面对添加，无从下手，不知道如何进行页面的跳转</h3><p> 解决方案：HTML界面写一个表单，通过action进行post请求和get      请求，action要写Java程序的url进行提交访问程序。</p><form action="LoginServlet"  method="post" >    @WebServlet("/addServlet")     //使用注解的方法进行绑定函数<p>还可以通过</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.sendRedirect(<span class="string">&quot;success.html&quot;</span>);</span><br></pre></td></tr></table></figure><p>对HTML直接访问，但是无法对Java程序调用。</p><h3 id="2，在添加成功后，无法进行返回。"><a href="#2，在添加成功后，无法进行返回。" class="headerlink" title="2，在添加成功后，无法进行返回。"></a>2，在添加成功后，无法进行返回。</h3><p>解决方法：通过超链接进行对主界面的再次访问，由于需要进行对主界面的再次访问，但是由于需要进行免登录，所以要进行参数传递，记住，超链接调用的是GET方法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;LoginServlet?name=cxw&amp;pwd=123&quot;</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3，在进行对删除方法的实现中，无法获取删除对象的ID"><a href="#3，在进行对删除方法的实现中，无法获取删除对象的ID" class="headerlink" title="3，在进行对删除方法的实现中，无法获取删除对象的ID"></a>3，在进行对删除方法的实现中，无法获取删除对象的ID</h3><p>解决方法：在点击删除按钮的同时，获取ID，并传入到delete方法，进行删除。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>&quot;<span class="attr">deleteServlet</span>?<span class="attr">id</span>=<span class="string">&quot; + Conn.ids.get(j) + &quot;</span>\&quot;&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="4，进行模糊查询时，不知如何去写模糊查询语句"><a href="#4，进行模糊查询时，不知如何去写模糊查询语句" class="headerlink" title="4，进行模糊查询时，不知如何去写模糊查询语句"></a>4，进行模糊查询时，不知如何去写模糊查询语句</h3><p>解决方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sql = con</span><br><span class="line">.prepareStatement(<span class="string">&quot;select * from untitled where stuName LIKE ? OR password LIKE ? OR stuID LIKE ?&quot;</span>);</span><br><span class="line">sql.setString(<span class="number">1</span>, <span class="string">&quot;%&quot;</span> + search + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">sql.setString(<span class="number">2</span>, <span class="string">&quot;%&quot;</span> + search + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">sql.setString(<span class="number">3</span>, <span class="string">&quot;%&quot;</span> + search + <span class="string">&quot;%&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="5，最大问题，修改界面无法进行展示已有参数，获取当前ID"><a href="#5，最大问题，修改界面无法进行展示已有参数，获取当前ID" class="headerlink" title="5，最大问题，修改界面无法进行展示已有参数，获取当前ID"></a>5，最大问题，修改界面无法进行展示已有参数，获取当前ID</h3><p>解决方法：重写一个界面使用PrintWriter的print方法，在界面中再次使用Conn.namesfind.get(0)进行ID查询并拼接在界面中，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pw.print(<span class="string">&quot;&lt;form action=&#x27;gai2Servlet&#x27;&quot;</span> + <span class="string">&quot;method&quot;</span> + <span class="string">&quot;=\&quot;post\&quot; &gt;&quot;</span>);</span><br><span class="line">pw.print(<span class="string">&quot;&lt;table  border=\&quot;1\&quot; bordercolor=\&quot;red\&quot;&gt;&quot;</span> + <span class="string">&quot;&lt;th&gt;姓名&lt;/th&gt;&quot;</span> + <span class="string">&quot;&lt;th&gt;密码&lt;/th&gt;&quot;</span>);</span><br><span class="line">pw.print(<span class="string">&quot;&lt;tr&gt;&lt;td&gt;用户名：&lt;/td&gt;&lt;td&gt;\r\n&quot;</span> + <span class="string">&quot;&lt;input type=\&quot;text\&quot; name=\&quot;name\&quot; id=\&quot;nameId\&quot; &quot;</span> + <span class="string">&quot;value=&#x27;&quot;</span></span><br><span class="line">+ Conn.namesfind.get(<span class="number">0</span>) + <span class="string">&quot;&#x27; /&gt;\r\n&quot;</span> + <span class="string">&quot;&lt;/td&gt;\r\n&quot;</span> + <span class="string">&quot;&lt;/tr&gt;\r\n&quot;</span> + <span class="string">&quot;&lt;tr&gt;\r\n&quot;</span></span><br><span class="line">+ <span class="string">&quot;             &lt;td&gt;密码：&lt;/td&gt;\r\n&quot;</span> + <span class="string">&quot;             &lt;td&gt;\r\n&quot;</span></span><br><span class="line">+ <span class="string">&quot;              &lt;input type=\&quot;password\&quot; name=\&quot;pwd\&quot; id=\&quot;userPwd\&quot; value=&#x27;&quot;</span> + Conn.pwdsfind.get(<span class="number">0</span>)</span><br><span class="line">+ <span class="string">&quot;&#x27; /&gt;\r\n&quot;</span> + <span class="string">&quot;             &lt;/td&gt;\r\n&quot;</span> + <span class="string">&quot;           &lt;/tr&gt;\r\n&quot;</span> + <span class="string">&quot;            &lt;tr&gt;\r\n&quot;</span></span><br><span class="line">+ <span class="string">&quot;             &lt;td colspan=\&quot;2\&quot;&gt;\r\n&quot;</span></span><br><span class="line">+ <span class="string">&quot;               &lt;input type=\&quot;submit\&quot;  value=\&quot;提交\&quot; /&gt;\r\n&quot;</span> + <span class="string">&quot;             &lt;/td&gt;\r\n&quot;</span></span><br><span class="line">+ <span class="string">&quot;            \r\n&quot;</span> + <span class="string">&quot;           &lt;/tr&gt;\r\n&quot;</span> + <span class="string">&quot;      \r\n&quot;</span> + <span class="string">&quot;      &lt;/table&gt;\r\n&quot;</span> + <span class="string">&quot;  \r\n&quot;</span></span><br><span class="line">+ <span class="string">&quot;  &lt;/form&gt;&quot;</span>);</span><br><span class="line">pw.close();</span><br></pre></td></tr></table></figure><p>然后再次通过</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String name = req.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">String pwd = req.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br></pre></td></tr></table></figure><p>对表单数据进行读写，并调用数据库语法进行数据的修改。</p><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1>]]></content>
      
      
      <categories>
          
          <category> Servlet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Servlet</title>
      <link href="/2021/09/27/Servlet/"/>
      <url>/2021/09/27/Servlet/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="Servlet使用1–-输出请求头的内容"><a href="#Servlet使用1–-输出请求头的内容" class="headerlink" title="Servlet使用1– 输出请求头的内容"></a>Servlet使用1– 输出请求头的内容</h2><ul><li><p>当浏览器向服务器发送请求的时候，浏览器会把HTTP请求头的信息写入到输出流中去，发送给服务器，Web服务器能够自动的处理来自浏览器的请求信息。</p></li><li><p>当有请求到达的时候，Servlet容器能够自动生成实现了javax.servlet.ServletRequest接口的Request类的对象，并把请求头的信息封装到请求对象中去。这个对象将会以参数的形式传递给Servlet的service()方法。</p></li><li><p>那么，既然，请求头的信息都包含在Request对象中，我们就能输出这些请求的内容。</p></li><li><p>javax.servlet.http.HttpServletRequest接口为我们提供了2个重要的方法，能够获取请求头中的键值对。</p><p>  a)Enumeration<String> javax.servlet.http.HttpServletRequest.getHeaderNames() 返回一个字符串类型的枚举</p><p>  b)Enumeration<String> javax.servlet.http.HttpServletRequest.getHeaders(String name) 返回一个字符串类型的枚举</p></li></ul><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">Enumeration&lt;String&gt; enu = request.getHeaderNames();     <span class="comment">//获取请求头</span></span><br><span class="line"><span class="keyword">while</span> (enu.hasMoreElements()) &#123;                         <span class="comment">//判断是否为空</span></span><br><span class="line">String headerName = enu.nextElement();</span><br><span class="line"></span><br><span class="line">String headerValues = request.getHeader(headerName);</span><br><span class="line">System.out.println(headerName + <span class="string">&quot;:&quot;</span> + headerValues);<span class="comment">//输出请求头</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Servlet使用2–-表单元素的处理"><a href="#Servlet使用2–-表单元素的处理" class="headerlink" title="Servlet使用2– 表单元素的处理"></a>Servlet使用2– 表单元素的处理</h2><ul><li>客户端向服务器发送http请求的时候，除了发送请求头数据之外，有时候，需要带一定的数据给服务器，由第一章节内容可以知道，这部分的内容称为：“Optional Request Body”，请求正文。</li><li>当用户通过表单，比如：登录或注册界面，可以向服务器发送请求正文信息。那么，Servlet容器能够解析请求正文的信息，并把这些信息封装到自动生成的Request对象中去，这个对象将被传递给service()方法，作为入参。</li><li>通过String javax.servlet.ServletRequest.getParameter(String name)方法能够拿到表单的数据。如果表单中有多选项，那么，通过Enumeration<String> javax.servlet.ServletRequest.getParameterNames()能够获取多选项的值。</li></ul><p>示例GET请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传入参数</span></span><br><span class="line">&lt;a href=<span class="string">&quot;testShow?name=tom&amp;psd=123456&quot;</span>&gt;servlet&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得参数</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">String name = request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">String psd = request.getParameter(<span class="string">&quot;psd&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;name:&quot;</span> + name);</span><br><span class="line">System.out.println(<span class="string">&quot;psd:&quot;</span> + psd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例POST请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);  <span class="comment">//将编码格式改为UTF-8的类型，防止中文乱码</span></span><br><span class="line">String name = request.getParameter(<span class="string">&quot;Name&quot;</span>);</span><br><span class="line">String pwd = request.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="sevlet使用的常见问题"><a href="#sevlet使用的常见问题" class="headerlink" title="sevlet使用的常见问题"></a>sevlet使用的常见问题</h2><ul><li>html的引用要使用所创建java程序的url，否则程序无法运行。</li><li><a href="https://blog.csdn.net/qq_31416771/article/details/94407591">解码问题</a></li><li>使用webservlet时，由于是单独的数据库，所以要重新导入SQL包。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Servlet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO</title>
      <link href="/2021/09/27/test/"/>
      <url>/2021/09/27/test/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://hexo.io/zh-cn/docs/tag-plugins#%E5%BC%95%E7%94%A8%E6%96%87%E7%AB%A0">hexo 引用文章</a><br><a href="http://cxwblog.top/2.jpg">test</a></p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LISHA AND ME</title>
      <link href="/2021/09/26/lisha/"/>
      <url>/2021/09/26/lisha/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5def38d3de05e2bc228e3e2f8aa543ac27bba3a0f452206b7a30b30562cce2ba">9fe58313f6e9246aa2f72ea1bb7d71fbace78e065600064f33f9cb7fa7bbe6979a7a37b82d9faec28a55a327ece63728d41ff1b2c3fc955ca63a0ef94b7d487937a0a2a414e39170703756a6d46b66461ac130d8138da351d0ace1fd6040ade04e9d90cf12acd5ef6d470ba2992a70521d2b2a2664dd1b1d4536bc959e6cb81a0cd8e1162a957912538da39e3857452334a2f6394702b3d660e6f4307fe0449a96404d2bb3ccb4dc526e73f2220f1df258feec7eb3734950170f1814450e8f792d0517be0b22de6b06b54668954dc845dab0401fbfa31c461ef505bc1b6f3cb6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">你需要一个密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> LISHA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LISHA </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
